GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a...done.
(gdb) run
Starting program: /home/student/ee599/lab4/ee599-lab4-yaoguokk/a 
Please enter n:

Program received signal SIGSEGV, Segmentation fault.
0x0000000000400a39 in factorial (
    n=<error reading variable: Cannot access memory at address 0x7fffff7feffc>)
    at brokengdb1.cpp:19
19	{
(gdb) l 1
1	#include<iostream>
2	 
3	using namespace std;
4	 
5	long factorial(int n);
6	 
7	int main()
8	{
9	    int n;
10	    cout<<"Please enter n:"<<endl;
(gdb) l 1
1	#include<iostream>
2	 
3	using namespace std;
4	 
5	long factorial(int n);
6	 
7	int main()
8	{
9	    int n;
10	    cout<<"Please enter n:"<<endl;
(gdb) 
11	    cin>>n;
12	    long val=factorial(n);
13	    cout<<"n factorial is: "<<val<<endl;
14	
15	    return 0;
16	}
17	 
18	long factorial(int n)
19	{
20	    if(n)
(gdb) 
21		return  factorial(n--)*n;
22	    else return 1;
23	    
24	    
25	}
(gdb) 
(gdb) break 22[K1
Breakpoint 1 at 0x400a42: file brokengdb1.cpp, line 21.
(gdb) break22
(gdb) Abreak22 22
Breakpoint 2 at 0x400a60: file brokengdb1.cpp, line 22.
(gdb) ][Kr
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/student/ee599/lab4/ee599-lab4-yaoguokk/a 
Please enter n:

Breakpoint 1, factorial (n=6) at brokengdb1.cpp:21
21		return  factorial(n--)*n;
(gdb) nea[Kxt\[K

Breakpoint 1, factorial (n=6) at brokengdb1.cpp:21
21		return  factorial(n--)*n;
(gdb) n

Breakpoint 1, factorial (n=6) at brokengdb1.cpp:21
21		return  factorial(n--)*n;
(gdb) print n
$1 = 6
(gdb) n

Breakpoint 1, factorial (n=6) at brokengdb1.cpp:21
21		return  factorial(n--)*n;
(gdb) n

Breakpoint 1, factorial (n=6) at brokengdb1.cpp:21
21		return  factorial(n--)*n;
(gdb) print n
$2 = 6
(gdb) qui[K[K[Kinfo breakpoints 
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x0000000000400a42 in factorial(int) 
                                                   at brokengdb1.cpp:21
	breakpoint already hit 5 times
2       breakpoint     keep y   0x0000000000400a60 in factorial(int) 
                                                   at brokengdb1.cpp:22
(gdb) bt
#0  factorial (n=6) at brokengdb1.cpp:21
#1  0x0000000000400a52 in factorial (n=5) at brokengdb1.cpp:21
#2  0x0000000000400a52 in factorial (n=5) at brokengdb1.cpp:21
#3  0x0000000000400a52 in factorial (n=5) at brokengdb1.cpp:21
#4  0x0000000000400a52 in factorial (n=5) at brokengdb1.cpp:21
#5  0x00000000004009e4 in main () at brokengdb1.cpp:12
(gdb) qui[K[K[Kvi[K[Kr
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/student/ee599/lab4/ee599-lab4-yaoguokk/a 
Please enter n:

Breakpoint 1, factorial (n=3) at brokengdb1.cpp:21
21		return  factorial(n--)*n;
(gdb) delete breakpoints 2[K1[K[K[K[K[K[K[K[K[K[K[K[K[K2
(gdb) info b
bookmarks    breakpoints  
(gdb) info breakpoints 
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x0000000000400a42 in factorial(int) 
                                                   at brokengdb1.cpp:21
	breakpoint already hit 1 time
(gdb) quir[Kt
A debugging session is active.

	Inferior 1 [process 2409] will be killed.

Quit anyway? (y or n) y
